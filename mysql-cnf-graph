#!/bin/bash

# Output the README.md for conveiniance. Prepend it with slashes so that dot will ignore it
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ -f $SCRIPTDIR/README.md ]; then
    while IFS='' read -r line || [[ -n "$line" ]]; do
        if [[ $line = "## Example" ]]; then
            break
        fi
        echo "// $line"
    done < "$SCRIPTDIR/README.md"
else
    echo "// See https://github.com/lenaschimmel/mysql-cnf-graph/ for help."
fi
echo

function processFile {
    if [ -f $1 ]; then
        echo "    "\"$FILE\" [href=\"file://$1\"];          # node for existing file
        
        # We need to grep for include and includedir at the same time to preserve ordering

        FILES=`grep "\!include" $1`
        local I=0
        for FILE in $FILES; do
            if [[ $FILE = "!include" ]]; then
                MODE="file"
            else 
                if [[ $FILE = "!includedir" ]]; then
                    MODE="dir"
                else
                    ((I++))
                    # mode should have been set by a previous line
                    echo "    \"$1\" -> "\"$FILE\" [label=\"\(order $I\)\"];             # link file -> (file or dir)

                    if [[ $MODE = "file" ]]; then
                        processFile $FILE
                    else 
                        processDir $FILE
                    fi
                fi
            fi
            
        done 
        for DIR in $DIRS; do
            if [[ ! $DIR = "!includedir" ]]; then
                echo "    \"$1\" -> "\"$DIR\";              # link file -> dir
                processDir $DIR
            fi
        done 
    else
        echo "    "\"$1\" [style=dotted];                   # node for missing file
    fi
}

function processDir {
    if [ -d $1 ]; then
        echo "    "\"$1\" [shape=box];                      # node for existing dir

        FILES=`find $1 -type f -name "*.cnf"`

        for FILE in $FILES; do
            echo "    \"$1\" -> "\"$FILE\";                 # link dir -> file
            processFile $FILE
        done 
    else
        echo "    "\"$1\" [style=dotted, shape=box];        # node for missing dir
    fi
}

ROOTS=`mysqld --verbose --help 2> /dev/null | grep -A 1 "Default options" | tail -n 1`

echo "digraph mysql {"

echo "    "ROOT [shape=diamond];                            # node for root

I=0
for FILE in $ROOTS; do
    ((I++))
    echo "    ROOT -> "\"$FILE\" [label=\"\(order $I\)\"];                             # link root -> file
    processFile $FILE
done 

echo "}"